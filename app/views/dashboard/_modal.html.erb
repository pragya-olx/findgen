<div class="modal fade" id="createBooking" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Add new booking</h4>
      </div>
        <div class="modal-body">

        <form id="bookingForm">
          <div class="form-group" id="startDate">
            <label for="startDate">Required On<span class="red">*</span></label>
            <br>
            <%= date_field(:booking, :start_date, {:required => true}) %>
          </div>

          <div class="form-group" id="timeIn">
            <label for="startDate">Time In (HH:MM)<span class="red">*</span> </label>
            <br>
            <%= time_field(:booking, :time_in,{:required => true}) %>
          </div>

          <div class="form-group" id="timeOut">
            <label for="startDate">Time Out (HH:MM)<span class="red">*</span> </label>
            <br>
            <%= time_field(:booking, :time_out,{:required => true}) %>
          </div>

          <div class="form-group">
            <label for="sel1">Select Generator Type</label>
            <select class="form-control" id="gen_type">
              <option>Backup</option>
              <option>Running</option>
            </select>
          </div>

          <div class="form-group">
            <label for="lisp">Lisp where Generator is required<span class="red">*</span></label>
            <br>
            <select class="selectdd" id="lisp">
            <% @lisps.each do |lisp| %>
              <option value=<%=lisp.code%> > <%=lisp.code%>, <%=lisp.name%>, <%=lisp.city%> </option>
            <% end %>
            </select>
          </div>

          <div class="form-group" id="s_lisps">
            <label for="lisp">Lisps covered by this mobile Generator</label>
            <br>
            <select multiple class="selectdd" id="secondary_lisp">
            <% @lisps.each do |lisp| %>
              <option value=<%=lisp.code%> > <%=lisp.code%>, <%=lisp.name%>, <%=lisp.city%> </option>
            <% end %>
            </select>
          </div>

          <div class="form-group">
            <label for="sel1">Select KVA</label>
            <select class="form-control" id="kva"> 
               <option>5</option>
               <option>7.5</option>
               <option>10</option>
               <option>15</option>
               <option>20</option>
               <option>25</option>
               <option>30</option>
               <option>35</option>
               <option>40</option>
               <option>45</option>
               <option>62</option>
               <option>82</option>
               <option>100</option>
               <option>125</option>
               <option>180</option>
               <option>200</option>
               <option>250</option>
               <option>375</option>
               <option>500</option>
            </select>
          </div>


          <div class="form-group">
            <label for="sel1">Assessment<span class="red">*</span></label>
            <select  class="form-control" id="assessment">
            <% @assessments.each do |assessment| %>
              <option value=<%=assessment.code%> > <%=assessment.code%> </option>
            <% end %>
            </select>
          </div>

          <div class="form-group">
            <label for="sel1">Representative<span class="red">*</span></label>
            <select class="selectdd" id="employee_id">
            <% @employees.each do |employee| %>
              <option value=<%=employee.employee_id%> data-phone=<%=employee.phone_number%> > <%=employee.employee_id%>, <%=employee.name%> </option>
            <% end %>
            </select>
          </div>

          <div class="form-group">
            <label for="sel1">Representative phone number<span class="red">*</span></label>
            <input data-error="Rep phone number is required" required name="rep_phone_number" class="form-control" id="rep_phone_number"></input>
          </div>

          <div class="form-group">
            <label for="sel1">Remarks</label>
            <textarea class="form-control" id="spoc_remarks"></textarea>
          </div>
          <input class="formSubmit" type="submit"></input>
          </form>

        </div>
        <div class="modal-footer">
          <div id="form_error" class="alert-danger">
            Please fill the required fields
          </div>
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary" id="save_bookings">Submit</button>
          <span class="glyphicon glyphicon-refresh spinning loading" id="save_bookings_loading"></span>

        </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    $("#gen_type").change(function(event){
      if($("#gen_type").val() == "Mobile") {
        $("#s_lisps").show()
      } else {
        $("#s_lisps").hide()
        $("#spoc_remarks").val('')
      }
    })

    $("#rep_phone_number").val($("#employee_id").find(':selected').data('phone'))
    $("#employee_id").change(function(){
      $("#rep_phone_number").val($("#employee_id").find(':selected').data('phone'))
    })

    $("#secondary_lisp").change(function(){
      sLisps = $("#secondary_lisp").val()
      fullLisp = []
      fullLispStr = "\n"
      for(var i=0; i < sLisps.length; i++) {
        fullLispStr += i+1 + ")" + $("#secondary_lisp").find('option[value='+sLisps[i]+']').text() + "\n"
      }
      $("#spoc_remarks").val("Lisps(Code, Name, City) covered by this Generator :" + fullLispStr)
    })

    $("#booking_time_in").change(function(){
      $("#booking_time_out").attr('min', $("#booking_time_in").val())
    })

    $("#save_bookings").click(function(){
      validatedate($("#booking_start_date"));
      
     })

   

function validatedate(inputText)  
  {  

  //Test which seperator is used '/' or '-'  
  var opera1 = inputText.val().split('/');  
  var opera2 = inputText.val().split('-');  
  lopera1 = opera1.length;  
  lopera2 = opera2.length;  
  // Extract the string into month, date and year  
  if (lopera1>1)  
  {  
  var pdate = inputText.val().split('/');  
  }  
  else if (lopera2>1)  
  {  
  var pdate = inputText.val().split('-');  
  }  
 
  var mm = parseInt(pdate[2]);  
  var dd  = parseInt(pdate[1]);  
  var yy = parseInt(pdate[0]); 
  if(yy >=2020)
  {
    console.log(yy);  
    alert("Please enter a valid date");
     return false;  
  }
    // Create list of days of a month [assume there is no leap year by default]  
  var ListofDays = [31,28,31,30,31,30,31,31,30,31,30,31];  
  if (mm==1 || mm>2)  
  {  
  if (dd>ListofDays[mm-1])  
  {  
  alert('Invalid date format!');  
  return false;  
  }  
  }  
  if (mm==2)  
  {  
  var lyear = false;  
  if ( (!(yy % 4) && yy % 100) || !(yy % 400))   
  {  
  lyear = true;  
  }  
  if ((lyear==false) && (dd>=29))  
  {  
  alert('Invalid date format!');  
  return false;  
  }  

  if ((lyear==true) && (dd>29))  
  {  
  alert('Invalid date format!');  
  return false;  
  }

  }  
  }  
 

</script>